"""Initial migration: create categories, accounts and transactions tables

Revision ID: 7ddf1797f91c
Revises: 
Create Date: 2025-10-12 22:47:07.777461

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7ddf1797f91c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Nome da conta'),
    sa.Column('type', sa.Enum('CHECKING', 'SAVINGS', 'INVESTMENT', 'CREDIT_CARD', 'CASH', 'OTHER', name='accounttype'), nullable=False, comment='Tipo da conta'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='Descrição da conta'),
    sa.Column('initial_balance', sa.Numeric(precision=15, scale=2), nullable=False, comment='Saldo inicial da conta'),
    sa.Column('current_balance', sa.Numeric(precision=15, scale=2), nullable=False, comment='Saldo atual da conta'),
    sa.Column('color', sa.String(length=7), nullable=False, comment='Cor em hexadecimal (#RRGGBB)'),
    sa.Column('icon', sa.String(length=50), nullable=False, comment='Nome do ícone'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Chave primária'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Data de criação do registro'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Data da última atualização'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Data de exclusão (soft delete)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indica se o registro está ativo'),
    sa.CheckConstraint("color ~ '^#[0-9A-Fa-f]{6}$'", name='check_account_color_hex_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('categories',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Nome da categoria'),
    sa.Column('type', sa.Enum('INCOME', 'EXPENSE', name='categorytype'), nullable=False, comment='Tipo da categoria (receita/despesa)'),
    sa.Column('description', sa.String(length=500), nullable=True, comment='Descrição da categoria'),
    sa.Column('color', sa.String(length=7), nullable=False, comment='Cor em hexadecimal (#RRGGBB)'),
    sa.Column('icon', sa.String(length=50), nullable=False, comment='Nome do ícone'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Chave primária'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Data de criação do registro'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Data da última atualização'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Data de exclusão (soft delete)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indica se o registro está ativo'),
    sa.CheckConstraint("color ~ '^#[0-9A-Fa-f]{6}$'", name='check_color_hex_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transactions',
    sa.Column('description', sa.String(length=200), nullable=False, comment='Descrição da transação'),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='Valor da transação (pode ser negativo para estornos)'),
    sa.Column('type', sa.Enum('INCOME', 'EXPENSE', name='transactiontype'), nullable=False, comment='Tipo da transação (receita/despesa)'),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', name='transactionstatus'), nullable=False, comment='Status da transação'),
    sa.Column('transaction_date', sa.Date(), nullable=False, comment='Data da transação'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Observações adicionais'),
    sa.Column('account_id', sa.Integer(), nullable=False, comment='ID da conta'),
    sa.Column('category_id', sa.Integer(), nullable=False, comment='ID da categoria'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Chave primária'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Data de criação do registro'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Data da última atualização'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Data de exclusão (soft delete)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indica se o registro está ativo'),
    sa.CheckConstraint('amount != 0', name='check_amount_not_zero'),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('categories')
    op.drop_table('accounts')
    # ### end Alembic commands ###
