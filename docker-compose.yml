version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: budgeting_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: budgeting_app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: budgeting_backend
    command: uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/budgeting_app
    volumes:
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: budgeting_frontend
    command: python -m frontend.app.main
    ports:
      - "8080:8080"
    environment:
      API_URL: http://backend:8000
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      - backend

volumes:
  postgres_data:
